// DDA function
/*function DDA(x1, y1, x2, y2) {
  let dx = Math.abs(x2 - x1);
  let dy = Math.abs(y2 - y1);
  let x = x1;
  let y = y1;
  let sx = x1 < x2 ? 1 : -1;
  let sy = y1 < y2 ? 1 : -1;
  let error = dx - dy;

  while (x !== x2 || y !== y2) {
      context.fillRect(x, y, 1, 1);
      let e2 = 2 * error;
      if (e2 > -dy) {
          error -= dy;
          x += sx;
      }
      if (e2 < dx) {
          error += dx;
          y += sy;
      }
  }
}*/

/*function drawLine(startX, startY, endX, endY) {
  let dx = Math.abs(endX - startX);
  let dy = Math.abs(endY - startY);
  let sx = (startX < endX) ? 1 : -1;
  let sy = (startY < endY) ? 1 : -1; 
  let error = dx - dy;

  while(true) {
      context.fillRect(startX, startY, 1, 1);
      if (startX === endX && startY === endY) {
      break;
      }
      let e2 = 2 * error;
      if (e2 > -dy) {
      error = error - dy;
      startX = startX + sx;
      }
      if (e2 < dx) {
      error = error + dx;
      startY = startY + sy;
      }
  }
}*/